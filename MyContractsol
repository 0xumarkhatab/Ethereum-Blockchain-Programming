// SPDX-License-Identifier: GPL-3.0

pragma solidity >=0.7.0 <0.9.0;

/**
 * @title Storage
 * @dev Store & retrieve value in a variable
 */

contract MyContract {
    string name = "Hello World";
address owner;

constructor(){
owner = tx.origin;
}

modifier onlyOwner(){
require (owner ==  msg.sender);
_;

}

// if we don't wanna change a function , we will 
// be needing to put the view modifier that this function 
// is capable of

    function getName () public view returns (string memory) {
        return name;

    }
// Note , We Don't have any modifiers here other than public

// but we have one Extra modifier  "onlyOwner"

// which means that if the person calling the "setName " function is Owner,
// then function call is Allowed , otherwise it's not !

    function setName(string memory _name) public onlyOwner{
        name =  _name;

    }
}
